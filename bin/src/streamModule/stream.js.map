{"version":3,"sources":["../../../src/streamModule/stream.ts"],"names":["createStreamModule","params","rxjs","operators","Error","state","baseModule","module","buttonMapMemoized","buttonMap","stickMapMemoized","stickMap","allButtonStream","Subject","pipe","map","a","allStickStream","buttonStreamMap","stickStreamMap","updateButtonStream","streamMap","stream","next","updateFn","updateStickStream","mapButtons","button","pad","prevPad","threshold","clampThreshold","buttons","mapSticks","stick","indexes","inverts","sticks","getAllButtonsStream","getAllStickStream","getButtonStream","buttonName","buttonStream","getStickStream","stickName","stickStream","update","gamepad","destroy","unsubscribe"],"mappings":"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","sourcesContent":["import memoize from 'fast-memoize';\r\nimport { assignIn, mapValues, forEach } from 'lodash/fp';\r\nimport * as rxjs from 'rxjs';\r\nimport * as operators from 'rxjs/operators';\r\n\r\nimport createBaseModule from '../baseModule/base';\r\n\r\nimport { buttonMap, stickMap } from '../common/utils';\r\nimport { BaseParams, ButtonResult, StickResult, RawGamepad } from '../types';\r\n\r\nexport type StreamModule = ReturnType<typeof createStreamModule>;\r\n\r\nexport interface ButtonStreamMapValue {\r\n  stream: rxjs.Subject<() => ButtonResult>;\r\n  updateFn: () => ButtonResult;\r\n}\r\n\r\nexport interface StickStreamMapValue {\r\n  stream: rxjs.Subject<() => StickResult>;\r\n  updateFn: () => StickResult;\r\n}\r\n\r\nexport interface StreamParams extends BaseParams {\r\n  rxjs: typeof rxjs;\r\n  operators: typeof operators;\r\n}\r\n\r\nexport default function createStreamModule(params: StreamParams) {\r\n  if (!params.rxjs || !params.operators) {\r\n    throw new Error(`createStreamModule called without rxjs and/or it's operators`);\r\n  }\r\n\r\n  const { state, module: baseModule } = createBaseModule(params);\r\n\r\n  const buttonMapMemoized = memoize(buttonMap);\r\n  const stickMapMemoized = memoize(stickMap);\r\n\r\n  const allButtonStream = new params.rxjs.Subject<() => Record<string, ButtonResult>>();\r\n  allButtonStream.pipe(params.operators.map((a: () => Record<string, ButtonResult>) => a()));\r\n\r\n  const allStickStream = new params.rxjs.Subject<() => Record<string, StickResult>>();\r\n  allStickStream.pipe(params.operators.map((a: () => Record<string, StickResult>) => a()));\r\n\r\n  const buttonStreamMap: Record<string, ButtonStreamMapValue> = {};\r\n  const stickStreamMap: Record<string, StickStreamMapValue> = {};\r\n\r\n  const updateButtonStream = (streamMap: ButtonStreamMapValue) =>\r\n    streamMap.stream.next(streamMap.updateFn);\r\n\r\n  const updateStickStream = (streamMap: StickStreamMapValue) =>\r\n    streamMap.stream.next(streamMap.updateFn);\r\n\r\n  const mapButtons = () =>\r\n    mapValues(\r\n      (button) =>\r\n        buttonMapMemoized(state.pad, state.prevPad, button, state.threshold, state.clampThreshold),\r\n      state.buttons,\r\n    );\r\n\r\n  const mapSticks = () =>\r\n    mapValues(\r\n      (stick) =>\r\n        stickMapMemoized(\r\n          state.pad,\r\n          state.prevPad,\r\n          stick.indexes,\r\n          stick.inverts,\r\n          state.threshold,\r\n          state.clampThreshold,\r\n        ),\r\n      state.sticks,\r\n    );\r\n\r\n  const module = assignIn(baseModule, {\r\n    ...baseModule,\r\n\r\n    getAllButtonsStream: () => {\r\n      return allButtonStream;\r\n    },\r\n\r\n    getAllStickStream: () => {\r\n      return allStickStream;\r\n    },\r\n\r\n    getButtonStream: (buttonName: string) => {\r\n      if (!buttonStreamMap[buttonName]) {\r\n        const buttonStream = new params.rxjs.Subject<() => ButtonResult>();\r\n        buttonStream.pipe(params.operators.map((a: () => ButtonResult) => a()));\r\n\r\n        buttonStreamMap[buttonName] = {\r\n          stream: buttonStream,\r\n          updateFn: () =>\r\n            buttonMapMemoized(\r\n              state.pad,\r\n              state.prevPad,\r\n              state.buttons[buttonName],\r\n              state.threshold,\r\n              state.clampThreshold,\r\n            ),\r\n        };\r\n      }\r\n\r\n      return buttonStreamMap[buttonName].stream;\r\n    },\r\n\r\n    getStickStream: (stickName: string) => {\r\n      if (!stickStreamMap[stickName]) {\r\n        const stickStream = new params.rxjs.Subject<() => StickResult>();\r\n        stickStream.pipe(params.operators.map((a: () => StickResult) => a()));\r\n\r\n        stickStreamMap[stickName] = {\r\n          stream: stickStream,\r\n          updateFn: () =>\r\n            stickMapMemoized(\r\n              state.pad,\r\n              state.prevPad,\r\n              state.sticks[stickName].indexes,\r\n              state.sticks[stickName].inverts,\r\n              state.threshold,\r\n              state.clampThreshold,\r\n            ),\r\n        };\r\n      }\r\n\r\n      return stickStreamMap[stickName].stream;\r\n    },\r\n\r\n    update: (gamepad: RawGamepad) => {\r\n      baseModule.update(gamepad);\r\n\r\n      allButtonStream.next(mapButtons);\r\n      allStickStream.next(mapSticks);\r\n      forEach(updateButtonStream, buttonStreamMap);\r\n      forEach(updateStickStream, stickStreamMap);\r\n    },\r\n\r\n    destroy: () => {\r\n      baseModule.destroy();\r\n\r\n      allButtonStream.unsubscribe();\r\n      allStickStream.unsubscribe();\r\n      forEach(({ stream }) => stream.unsubscribe(), buttonStreamMap);\r\n      forEach(({ stream }) => stream.unsubscribe(), stickStreamMap);\r\n    },\r\n  });\r\n\r\n  return module;\r\n}\r\n"],"file":"stream.js"}